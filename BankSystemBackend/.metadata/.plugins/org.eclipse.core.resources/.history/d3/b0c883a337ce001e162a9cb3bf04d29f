package com.RSstudies.Services;

import io.jsonwebtoken.Jwts;
import io.jsonwebtoken.SignatureAlgorithm;

import java.nio.charset.StandardCharsets;
import java.security.Key;
import java.util.Date;

import javax.crypto.spec.SecretKeySpec;

import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.stereotype.Service;
@Service
public class JWTServiceService {

//    private String generateToken(UserDetails userDetails) {
//        return Jwts.builder().setSubject(userDetails.getUsername())
//                .setIssuedAt(new Date(System.currentTimeMillis()))
//                .setExpiration(new Date(System.currentTimeMillis() + 1000 * 60 * 24))
//                .signWith(SignatureAlgorithm.HS256, getSignKey())
//                .compact();
//    }
//
//    private Key getSignKey() {
//        String keyString = "your_secret_key_here";
//        byte[] keyBytes = keyString.getBytes(StandardCharsets.UTF_8);
//        return new SecretKeySpec(keyBytes, SignatureAlgorithm.HS256.getJcaName());
//    }

}
